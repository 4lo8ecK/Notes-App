<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>